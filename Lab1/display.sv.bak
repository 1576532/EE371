module display (clk, reset, z, HEX0, HEX1, HEX2, HEX3, HEX4, HEX5);

	output logic [6:0] HEX0, HEX1, HEX2, HEX3, HEX4, HEX5;
	input logic [4:0] z;
	input logic clk, reset;
	
	always_comb begin
		if (z >= 5'b11001) begin
			HEX5 = ~7'b1000111;
			HEX4 = ~7'b0111110;
			HEX3 = ~7'b0001110;
			HEX2 = ~7'b0001110;
		end
		if (z == 5'b00000 | reset) begin
			HEX5 = ~7'b1001111;
			HEX4 = ~7'b1101010;
			HEX3 = ~7'b1100111;
			HEX2 = ~7'b0001111;
			HEX1 = ~7'b0111011;
			HEX0 = ~7'b1111110;
		end
		else begin
			HEX5 = 7'b1111111;
			HEX4 = 7'b1111111;
			HEX3 = 7'b1111111;
			HEX2 = 7'b1111111;
			HEX1[0] = (~z[0] & z[1] & (z[2] | z[3])) | (~z[1] & ~z[2] & z[0]);
			HEX1[1] = 1'b0;
			HEX1[2] = z[0] & (z[1] | z[2]);
			HEX1[3] = (~z[0] & z[1] & (z[2] | z[3])) | (~z[1] & ~z[2] & z[0]);
			HEX1[4] = (~z[0] & z[1] & (z[2] | z[3])) | (~z[1] & ~z[2] & z[0]);
			HEX1[5] = z[0] | z[1] & (z[2] | z[3]);
			HEX1[6] = ~z[0] | (~z[1] & ~z[2]);
			
			//HEX0[0] = (~z[0] & z[1] & ~z[2] & z[3] & e) | (~z[0] & ~z[1] & ~z[3] & (~z[2] | ~e)) | (z[0] & ~z[3] & (~z[1] & z[2] & e | z[1] & ~z[2] & ~e));
			HEX0[0] = (z[0] & (z[1] & ~z[4] | z[2] & ~z[3] & z[4])) | (~z[0] & ~z[1] & ~z[3] & (~z[2] | ~z[4])) | (z[1] & z[3] & (z[2] ^ z[4]));
			HEX0[1] = (~z[0] & ~z[1] & z[2] & (z[3] ^ z[4])) | (z[1] & z[4] & (z[0] | (z[2] & z[3]))) | (~z[1] & ~z[2] & ~z[3] & ~z[4]);
			HEX0[2] = (~z[0] & ~z[1] & ~z[2] & ~z[4]) | (z[2] & ~z[4] & ((z[1] & ~z[3]) | (z[0] & z[3])));
			HEX0[3] = (~z[1] & ~z[3] & ((~z[2] & z[4]) | (z[0] & z[4]) | (~z[0] & ~z[4]))) | (z[1] & z[3] & (z[2] ^ z[4])) | (z[0] & z[1] & ~z[4]) | (~z[0] & ~z[1] & z[2] & z[3] & z[4]);
			HEX0[4] = z[4] | (z[1] & (z[0] |(z[2] & z[3]))) | (~z[0] & ~z[1] & ~z[3]);
			HEX0[5] = (~z[0] & ~z[2] & (~z[1] | (z[3] & z[4]))) | (~z[1] & z[4] & ((z[0] & ~z[3]) | (z[2] & z[3]))) | (z[2] & ((z[0] & z[3]) | (z[1] & ~z[3])));
			HEX0[6] = (~z[1] & z[4] & ((~z[2] & ~z[3]) | (~z[0] & z[2] & z[3]))) | (z[1] & z[3] & ~z[2]) | (z[0] & z[2] & ~z[3]);
		end
	end	

endmodule
