|DE1_SoC
CLOCK_50 => CLOCK_50.IN1
HEX0[0] <= seg7:yo.d
HEX0[1] <= seg7:yo.d
HEX0[2] <= seg7:yo.d
HEX0[3] <= seg7:yo.d
HEX0[4] <= seg7:yo.d
HEX0[5] <= seg7:yo.d
HEX0[6] <= seg7:yo.d
HEX1[0] <= <VCC>
HEX1[1] <= <VCC>
HEX1[2] <= <VCC>
HEX1[3] <= <VCC>
HEX1[4] <= <VCC>
HEX1[5] <= <VCC>
HEX1[6] <= <VCC>
HEX2[0] <= <VCC>
HEX2[1] <= <VCC>
HEX2[2] <= <VCC>
HEX2[3] <= <VCC>
HEX2[4] <= <VCC>
HEX2[5] <= <VCC>
HEX2[6] <= <VCC>
HEX3[0] <= <VCC>
HEX3[1] <= <VCC>
HEX3[2] <= <VCC>
HEX3[3] <= <VCC>
HEX3[4] <= <VCC>
HEX3[5] <= <VCC>
HEX3[6] <= <VCC>
HEX4[0] <= <VCC>
HEX4[1] <= <VCC>
HEX4[2] <= <VCC>
HEX4[3] <= <VCC>
HEX4[4] <= <VCC>
HEX4[5] <= <VCC>
HEX4[6] <= <VCC>
HEX5[0] <= <VCC>
HEX5[1] <= <VCC>
HEX5[2] <= <VCC>
HEX5[3] <= <VCC>
HEX5[4] <= <VCC>
HEX5[5] <= <VCC>
HEX5[6] <= <VCC>
KEY[0] => controller:c.reset
KEY[1] => _.IN1
KEY[2] => ~NO_FANOUT~
KEY[3] => ~NO_FANOUT~
LEDR[0] <= <GND>
LEDR[1] <= <GND>
LEDR[2] <= <GND>
LEDR[3] <= <GND>
LEDR[4] <= <GND>
LEDR[5] <= <GND>
LEDR[6] <= <GND>
LEDR[7] <= <GND>
LEDR[8] <= <GND>
LEDR[9] <= controller:c.done
SW[0] => controller:c.A[0]
SW[0] => datapath:data.A[0]
SW[1] => controller:c.A[1]
SW[1] => datapath:data.A[1]
SW[2] => controller:c.A[2]
SW[2] => datapath:data.A[2]
SW[3] => controller:c.A[3]
SW[3] => datapath:data.A[3]
SW[4] => controller:c.A[4]
SW[4] => datapath:data.A[4]
SW[5] => controller:c.A[5]
SW[5] => datapath:data.A[5]
SW[6] => controller:c.A[6]
SW[6] => datapath:data.A[6]
SW[7] => controller:c.A[7]
SW[7] => datapath:data.A[7]
SW[8] => ~NO_FANOUT~
SW[9] => controller:c.s


|DE1_SoC|clock_divider:cdiv
clock => divided_clocks[0]~reg0.CLK
clock => divided_clocks[1]~reg0.CLK
clock => divided_clocks[2]~reg0.CLK
clock => divided_clocks[3]~reg0.CLK
clock => divided_clocks[4]~reg0.CLK
clock => divided_clocks[5]~reg0.CLK
clock => divided_clocks[6]~reg0.CLK
clock => divided_clocks[7]~reg0.CLK
clock => divided_clocks[8]~reg0.CLK
clock => divided_clocks[9]~reg0.CLK
clock => divided_clocks[10]~reg0.CLK
clock => divided_clocks[11]~reg0.CLK
clock => divided_clocks[12]~reg0.CLK
clock => divided_clocks[13]~reg0.CLK
clock => divided_clocks[14]~reg0.CLK
clock => divided_clocks[15]~reg0.CLK
clock => divided_clocks[16]~reg0.CLK
clock => divided_clocks[17]~reg0.CLK
clock => divided_clocks[18]~reg0.CLK
clock => divided_clocks[19]~reg0.CLK
clock => divided_clocks[20]~reg0.CLK
clock => divided_clocks[21]~reg0.CLK
clock => divided_clocks[22]~reg0.CLK
clock => divided_clocks[23]~reg0.CLK
clock => divided_clocks[24]~reg0.CLK
clock => divided_clocks[25]~reg0.CLK
clock => divided_clocks[26]~reg0.CLK
clock => divided_clocks[27]~reg0.CLK
clock => divided_clocks[28]~reg0.CLK
clock => divided_clocks[29]~reg0.CLK
clock => divided_clocks[30]~reg0.CLK
clock => divided_clocks[31]~reg0.CLK
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
reset => divided_clocks.OUTPUTSELECT
divided_clocks[0] <= divided_clocks[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[1] <= divided_clocks[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[2] <= divided_clocks[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[3] <= divided_clocks[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[4] <= divided_clocks[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[5] <= divided_clocks[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[6] <= divided_clocks[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[7] <= divided_clocks[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[8] <= divided_clocks[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[9] <= divided_clocks[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[10] <= divided_clocks[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[11] <= divided_clocks[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[12] <= divided_clocks[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[13] <= divided_clocks[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[14] <= divided_clocks[14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[15] <= divided_clocks[15]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[16] <= divided_clocks[16]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[17] <= divided_clocks[17]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[18] <= divided_clocks[18]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[19] <= divided_clocks[19]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[20] <= divided_clocks[20]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[21] <= divided_clocks[21]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[22] <= divided_clocks[22]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[23] <= divided_clocks[23]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[24] <= divided_clocks[24]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[25] <= divided_clocks[25]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[26] <= divided_clocks[26]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[27] <= divided_clocks[27]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[28] <= divided_clocks[28]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[29] <= divided_clocks[29]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[30] <= divided_clocks[30]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[31] <= divided_clocks[31]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|DE1_SoC|seg7:yo
z[0] => Mux0.IN19
z[0] => Mux1.IN19
z[0] => Mux2.IN19
z[0] => Mux3.IN19
z[0] => Mux4.IN19
z[0] => Mux5.IN19
z[0] => Mux6.IN19
z[1] => Mux0.IN18
z[1] => Mux1.IN18
z[1] => Mux2.IN18
z[1] => Mux3.IN18
z[1] => Mux4.IN18
z[1] => Mux5.IN18
z[1] => Mux6.IN18
z[2] => Mux0.IN17
z[2] => Mux1.IN17
z[2] => Mux2.IN17
z[2] => Mux3.IN17
z[2] => Mux4.IN17
z[2] => Mux5.IN17
z[2] => Mux6.IN17
z[3] => Mux0.IN16
z[3] => Mux1.IN16
z[3] => Mux2.IN16
z[3] => Mux3.IN16
z[3] => Mux4.IN16
z[3] => Mux5.IN16
z[3] => Mux6.IN16
d[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
d[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
d[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
d[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
d[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
d[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
d[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|DE1_SoC|controller:c
clk => ps~1.DATAIN
s => Selector1.IN2
s => Selector2.IN1
s => setA.IN0
s => Selector0.IN1
reset => ps.OUTPUTSELECT
reset => ps.OUTPUTSELECT
reset => ps.OUTPUTSELECT
A_zero => Selector2.IN2
A_zero => incrResult.IN0
A_zero => Selector1.IN1
A_0 => incrResult.IN1
A[0] => ~NO_FANOUT~
A[1] => ~NO_FANOUT~
A[2] => ~NO_FANOUT~
A[3] => ~NO_FANOUT~
A[4] => ~NO_FANOUT~
A[5] => ~NO_FANOUT~
A[6] => ~NO_FANOUT~
A[7] => ~NO_FANOUT~
setA <= setA.DB_MAX_OUTPUT_PORT_TYPE
resetResult <= resetResult.DB_MAX_OUTPUT_PORT_TYPE
incrResult <= incrResult.DB_MAX_OUTPUT_PORT_TYPE
shiftA <= shiftA.DB_MAX_OUTPUT_PORT_TYPE
done <= done.DB_MAX_OUTPUT_PORT_TYPE


|DE1_SoC|datapath:data
clk => counter[0].CLK
clk => counter[1].CLK
clk => counter[2].CLK
clk => counter[3].CLK
clk => A_reg[0].CLK
clk => A_reg[1].CLK
clk => A_reg[2].CLK
clk => A_reg[3].CLK
clk => A_reg[4].CLK
clk => A_reg[5].CLK
clk => A_reg[6].CLK
clk => A_reg[7].CLK
setA => A_reg.OUTPUTSELECT
setA => A_reg.OUTPUTSELECT
setA => A_reg.OUTPUTSELECT
setA => A_reg.OUTPUTSELECT
setA => A_reg.OUTPUTSELECT
setA => A_reg.OUTPUTSELECT
setA => A_reg.OUTPUTSELECT
setA => A_reg.OUTPUTSELECT
resetResult => counter.OUTPUTSELECT
resetResult => counter.OUTPUTSELECT
resetResult => counter.OUTPUTSELECT
resetResult => counter.OUTPUTSELECT
incrResult => counter.OUTPUTSELECT
incrResult => counter.OUTPUTSELECT
incrResult => counter.OUTPUTSELECT
incrResult => counter.OUTPUTSELECT
shiftA => A_reg.OUTPUTSELECT
shiftA => A_reg.OUTPUTSELECT
shiftA => A_reg.OUTPUTSELECT
shiftA => A_reg.OUTPUTSELECT
shiftA => A_reg.OUTPUTSELECT
shiftA => A_reg.OUTPUTSELECT
shiftA => A_reg.OUTPUTSELECT
shiftA => A_reg.OUTPUTSELECT
A[0] => A_reg.DATAB
A[1] => A_reg.DATAB
A[2] => A_reg.DATAB
A[3] => A_reg.DATAB
A[4] => A_reg.DATAB
A[5] => A_reg.DATAB
A[6] => A_reg.DATAB
A[7] => A_reg.DATAB
count[0] <= counter[0].DB_MAX_OUTPUT_PORT_TYPE
count[1] <= counter[1].DB_MAX_OUTPUT_PORT_TYPE
count[2] <= counter[2].DB_MAX_OUTPUT_PORT_TYPE
count[3] <= counter[3].DB_MAX_OUTPUT_PORT_TYPE
A_zero <= Equal0.DB_MAX_OUTPUT_PORT_TYPE
A_0 <= A_reg[0].DB_MAX_OUTPUT_PORT_TYPE


